# Задача №39.
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива

##############
# # Ввод:
# # 7
## # 3 1 3 4 2 4 12
# # 6
# # 4 15 43 1 15 1

# Вывод:
# 3 3 2 12
# (каждое число вводится с новой строки)
###############################################

lst_1 = [3, 1, 3, 4, 2, 4, 12]
lst_2 = [4, 15, 43, 1, 15, 1]
lst_3 = []

# Быстрое создание списка через INPUT
# и разбиение данных через пробелы с помощью функции .split()
# в результате получим список строк.
# Переводим в список чисел с помощью функций list и map
# lst = list(map(int(input("Введите элементы через пробел: ").split())))


# Традиционный итератор с функцией .append:
for elem in lst_1:
    if elem not in lst_2:
        lst_3.append(elem)
print(lst_3)

# Функциональность list comprehension предоставляет более краткий
# и лаконичный синтаксис для создания списков на основе других наборов данных.
# Она имеет следующий синтаксис:
# newlist = [expression for item in iterable (if condition)]

print(*[elem for elem in lst_1 if elem not in lst_2])

print(*list(filter(lambda x: x not in lst_2, lst_1)))

# Виды включений:
# 1. Списковые - []
# 2. Множественные - {}
# 3. Словарные - {}

# Виды циклов:
# while - цикл с предусловием
# for - цикл арифметический


