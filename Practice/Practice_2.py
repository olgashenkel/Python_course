# Условная конструкция (if, elif, else)
# ###################################################################################
# ###################################################################################
#
# # Что выведет следующий код?
# n = 5
# if n == 5:
#     print("n = 5")
#     n = n + 1
# elif n < 6:
#     print("n < 6")
#     n = n + 1
# else:
#     print("n > 6")
#
# # ###################################################################################
# # ###################################################################################
#
# # Что выведет следующий код?
# x = 3
# y = 4
# z = 5
#
# print(x if not x + y * z else y)

# ###################################################################################
# ###################################################################################
#
# # Напишите программу, в которую пользователь вводит два числа, а апрограмма выводит сообщение, какое из чисел наибольшее.
#
# num1 = int(input("Введите первое число: "))
# num2 = int(input("Введите второе число: "))
# if num1 > num2:
#     print(f"Число {num1} больше {num2}")
# elif num2 > num1:
#     print(f"Число {num2} больше {num1}")
# else:
#     print("Числа равны!")
#
# # Изменить код программы, чтобы она вычисляла наибольшее число с помощью одного выражения
# num3 = num1 if num1 > num2 else num2
# print(f"Наибольшее число: {num3}")
# ###################################################################################
# ###################################################################################

# Напишите программу, которая вычисляет сумму скидки в зависимости от суммы продажи.
# summa = float(input("Введите сумму продажи: "))
#
# if summa > 0 and summa <= 5000:
#     print(f"Скидка: 5% ({summa * 0.05})\nСумма с учетом скидки: {summa - summa * 0.05}")
# elif summa > 5000 and summa <= 15000:
#     print(f"Скидка: 12% ({summa * 0.12})\nСумма с учетом скидки: {summa - summa * 0.12}")
# elif summa > 15000 and summa <= 25000:
#     print(f"Скидка: 20% ({summa * 0.2})\nСумма с учетом скидки: {summa - summa * 0.2}")
# elif summa > 25000:
#     print(f"Скидка: 30% ({summa * 0.3})\nСумма с учетом скидки: {summa - summa * 0.3}")
# else:
#     print("Введена некорректная сумма! Невозможно произвести расчет!")
# ###################################################################################
# ###################################################################################


# Упражнение 35. Чет или нечет?
# Напишите программу, запрашивающую у пользователя целое число и выводящую на экран информацию о том,
# является введенное число четным или нечетным.
#
# n = int(input("Введите любое целое число: "))
#
# if (n % 2 == 0):
#     print(f"Введенное число {n} является четным.")
# else:
#     print(f"Введенное число {n} является нечетным.")

# # ###################################################################################
# # ###################################################################################
#
# Упражнение 36. Собачий возраст
# Считается, что один год, прожитый собакой, эквивалентен семи человеческим годам.
# При этом зачастую не учитывается, что собаки становятся абсолютно взрослыми уже к двум годам.
# Таким образом, многие предпочитают каждый из первых двух лет жизни собаки приравнивать к 10,5 года человеческой жизни,
# а все последующие – к четырем.
# Напишите программу, которая будет переводить человеческий возраст в собачий с учетом указанной выше логики.
# Убедитесь, что программа корректно работает при пересчете возраста собаки меньше и больше двух лет.
# Также программа должна выводить сообщение об ошибке, если пользователь ввел отрицательное число.

# year = int(input("Введите человеческий возраст: "))
#
# if (year > 0 and year < 10.5):
#     print(f"Человеческий возраст {year} лет при переводе в собачий составляет меньше 1 года.")
# elif (year > 0 and year >= 10.5 and year < 21):
#     print(f"Человеческий возраст {year} лет при переводе в собачий составляет 1 год.")
# elif (year > 0 and year >= 21):
#     print(f"Человеческий возраст {year} лет при переводе в собачий составляет {(year - 21) // 4 + 2} года/лет.")
# else:
#     print(f"Ошибка! Возраст не может быть отрицательным или равным 0!")

# # ###################################################################################
# # ###################################################################################
#
## Упражнение 37. Гласные и согласные
# Разработайте программу, запрашивающую у пользователя букву латинского алфавита.
# Если введенная буква входит в следующий список (a, e, i, o или u), необходимо вывести сообщение о том,
# что эта буква гласная. Если была введена буква y, программа должна написать, что эта буква может
# быть как гласной, так и согласной. Во всех других случаях должно выводиться сообщение о том, что введена согласная буква.
#
# letter = str(input("Введите любую букву латинского алфавита: "))
# letter = letter.lower()
# i = 1
# if i == len(letter):
#     if letter == "a" or letter == "e" or letter == "i" or letter == "o" or letter == "u":
#         print(f"Введенная буква - {letter} - является гласной.")
#     elif letter == "y":
#         print("Введенная буква -", {letter}, "- может быть как гласной, так и согласной.")
#     else:
#         print("Введена согласная буква.")
# else:
#     print("Введено несколько букв.")

# # ###################################################################################
# # ###################################################################################
#
#
# Упражнение 54. Оценка работы
# Представьте, что в компании проводится аттестация сотрудников в конце каждого года.
# Шкала рейтинга начинается на отметке 0,0, и чем лучше оценка, тем выше руководство оценивает сотрудника, а значит,
# тем больше будет его прибавка к зарплате. Рейтинг, присваиваемый сотрудникам, может составлять значения 0,0, 0,4 или 0,6 и выше.
# Значения между 0,0 и 0,4, а также между 0,4 и 0,6 никогда не используются. Значения, ассоциированные с каждым рейтингом,
# показаны в табл. 2.14. Прибавка к зарплате сотрудника рассчитывается как рейтинг, умноженный на $2400,00.

# Таблица 2.14. Таблица рейтингов
# Рейтинг Значение
# 0,0 Низкий уровень
# 0,4 Удовлетворительный уровень
# 0,6 и выше Высокий уровень

# Напишите программу, которая будет запрашивать у пользователя рейтинг сотрудника и выводить соответствующее значение из приведенной таблицы.
# Также необходимо показать сумму прибавки сотрудника. При вводе некорректного значения рейтинга программа должна об этом сообщать.

# RAISE_FACTOR = 2400.00
# UNACCEPTABLE = 0
# ACCEPTABLE = 0.4
# MERITORIOUS = 0.6
# # Запрашиваем у пользователя рейтинг
# rating = float(input("Введите рейтинг: "))
# # Классифицируем сотрудников
# if rating == UNACCEPTABLE:
#     performance = "низкий"
# elif rating == ACCEPTABLE:
#     performance = "удовлетворительный"
# elif rating >= MERITORIOUS:
#     performance = "высокий"
# else:
#     performance = ""
# # Выводим результат
# if performance == "":
#     print("Введен ошибочный рейтинг.")
# else:
#     print("Основываясь на введенном рейтинге, ваш уровень: %s." % \
#           performance)
# print("Прибавка к зарплате составит: $%.2f." % \
#       (rating * RAISE_FACTOR))

# ###################################################################################
# ###################################################################################


### ЦИКЛЫ WHILE, FOR, ВЛОЖЕННЫЕ ЦИКЛЫ
### ВЫХОД ИЗ ЦИКЛА. break, continue


# ###################################################################################
# ###################################################################################

# # Цикл while:
# # while условное_выражение:
# #   инструкции

# number = 10
#
# while number < 5:
#     print(f"number = {number}")
#     number += 1
# else:
#     print(f"number = {number}. Работа цикла завершена!")
#
# print("Работа программы завершена!")


# ###################################################################################
# ###################################################################################

# # Цикл for:
# # for переменная in набор_значений:
# #   инструкции



# ###################################################################################
# ###################################################################################


# ###################################################################################
# ###################################################################################
